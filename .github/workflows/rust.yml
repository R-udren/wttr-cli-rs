name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [ x86_64-pc-windows-gnu, x86_64-unknown-linux-gnu ]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64-x86-64-dev

      - name: Set up Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Check code
        run: cargo check --verbose

      - name: Build
        run: cargo build --target ${{ matrix.target }} --verbose --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            ./target/x86_64-pc-windows-gnu/release/wttr-cli.exe
            ./target/x86_64-unknown-linux-gnu/release/wttr-cli

  release:
    name: Release ${{ github.ref }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
          files: |
            ./target/x86_64-pc-windows-gnu/release/wttr-cli.exe
            ./target/x86_64-unknown-linux-gnu/release/wttr-cli
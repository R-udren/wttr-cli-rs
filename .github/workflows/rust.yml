name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86_64-pc-windows-gnu, x86_64-unknown-linux-gnu]

    steps:
    - uses: actions/checkout@v4

    - name: Cache Cargo registry and build
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64

    - name: Set up Rust target
      run: rustup target add ${{ matrix.target }}

    - name: Check code
      run: cargo check --verbose

    - name: Build
      run: cargo build --target ${{ matrix.target }} --verbose

    - name: Run tests
      if: matrix.target == 'x86_64-unknown-linux-gnu'
      run: cargo test --target ${{ matrix.target }} --verbose

    - name: Run Clippy
      run: cargo clippy --target ${{ matrix.target }} --verbose -- -D warnings
